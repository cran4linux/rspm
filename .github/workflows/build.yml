name: build
on: [push, pull_request]

jobs:
  build:
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}
    runs-on: ubuntu-latest
    name: ${{ matrix.config.image }}:${{ matrix.config.tag }}
    container:
      image: ${{ matrix.config.repo }}${{ matrix.config.image }}:${{ matrix.config.tag }}

    strategy:
      fail-fast: false
      matrix:
        config:
        - {image: 'centos', tag: 'centos7', repo: 'quay.io/centos/'}
        - {image: 'centos', tag: 'stream8', repo: 'quay.io/centos/'}
        - {image: 'centos', tag: 'stream9', repo: 'quay.io/centos/'}
        - {image: 'ubuntu', tag: '18.04',   repo: 'rocker/r-'}
        - {image: 'ubuntu', tag: '20.04',   repo: 'rocker/r-'}
        - {image: 'ubuntu', tag: '22.04',   repo: 'rocker/r-'}
        #- {image: 'leap',   tag: '15.3',    repo: 'opensuse/'}
        #- {image: 'leap',   tag: '15.4',    repo: 'opensuse/'}

    steps:
    - name: Install dependencies (CentOS 7)
      if: ${{ matrix.config.tag == 'centos7' }}
      run: |
        yum install -y epel-release
        yum install -y R-core

    - name: Install dependencies (CentOS 8)
      if: ${{ matrix.config.tag == 'stream8' }}
      run: |
        dnf install -y 'dnf-command(config-manager)'
        dnf config-manager --set-enabled powertools
        dnf install -y epel-release epel-next-release
        dnf install -y R-core

    - name: Install dependencies (CentOS 9)
      if: ${{ matrix.config.tag == 'stream9' }}
      run: |
        dnf install -y 'dnf-command(config-manager)'
        dnf config-manager --set-enabled crb
        dnf install -y epel-release epel-next-release
        dnf install -y R-core

    - name: Install dependencies (Ubuntu)
      if: ${{ matrix.config.image == 'ubuntu' }}
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        apt update && apt install -y apt-file

    - name: Install dependencies (openSUSE)
      if: ${{ matrix.config.image == 'leap' }}
      run: |
        zypper addrepo https://download.opensuse.org/repositories/Education/${{ matrix.config.tag }}/Education.repo
        zypper --no-gpg-checks install -y tar R-base # no binaries available :(

    - uses: actions/checkout@v3

    - name: Check
      env:
        _R_CHECK_CRAN_INCOMING_REMOTE_: false
      run: |
        export LANG=$(locale -a | grep utf8 | head -n1)
        Rscript -e 'install.packages(c("renv", "tinytest"), repos="https://cran.r-project.org")'
        R CMD build . && mkdir check
        useradd -m rspm && chown rspm:rspm check
        su rspm -c "R CMD check rspm_*.tar.gz --no-manual -o check"

    - name: Upload check results
      if: ${{ failure() }}
      uses: actions/upload-artifact@master
      with:
        name: r-${{ matrix.config.image }}-${{ matrix.config.tag }}-results
        path: check
